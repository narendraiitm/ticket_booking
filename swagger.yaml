openapi: 3.0.0
info:
  title: Week Six Assignment
  description: >
    Documentation for the week six assignment.  
    
    <h2> Course Table Schema </h2> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>course_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>course_name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>course_code</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>      
      <tr>
        <td>course_description</td>
        <td>String</td>
        <td></td>
      </tr>         
    </tbody>
    </table>
    
    <h2> Student Table Schema </h2> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>student_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>roll_number</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>
      <tr>
        <td>first_name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>      
      <tr>
        <td>last_name</td>
        <td>String</td>
        <td></td>
      </tr>         
    </tbody>
    </table>
    
    
    <h2> Enrollment Table Schema </h2> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>enrollment_id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>student_id</td>
        <td>Integer</td>
        <td>Foreign Key (student.studentid), Not Null</td>
      </tr>
      <tr>
        <td>course_id</td>
        <td>Integer</td>
        <td>Foreign Key (course.courseid), Not Null</td>
    </tbody>
    </table>
    
    <h2> Error Codes </h2> 
    <table>
      <thead>
        <th>Resource</th>
        <th>Error Code</th>
        <th>Message</th>
      </thead>
      <tbody>
      <tr>
        <td>Course</td>
        <td>COURSE001</td>
        <td>Course Name, Course Code is required and Course Code, Course Description, Course Name should be string.</td>
      </tr>
      <tr>
        <td>Student</td>
        <td>STUDENT001</td>
        <td>Roll Number, First Name is required and Roll Number, First Name and Last Name is String </td>
      </tr>
      <tr>
        <td>Enrollment</td>
        <td>ENROLLMENT001</td>
        <td>Course does not exist</td>
      </tr>
      <tr>
        <td>Enrollment</td>
        <td>ENROLLMENT002</td>
        <td>Student does not exist.</td>
      </tr>    
    </tbody>
    </table>
    
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/
paths:
  /api/course/{course_id}:
    description: End point to read, update and delete a course resource with course_id = courseId.
    get:
      description: Operation to Read course resource.
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 201
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: course object
                type: object
                properties:
                  course_id:
                    type: integer
                    example: 201
                  course_name:
                    type: string
                    example: Maths1
                  course_code:
                    type: string
                    example: MA101
                  course_description:
                    type: string
                    example: Course Description Example
        '500':
          description: Internal Server Error
        '404':
          description: Course not found

    put:
      description: Operation to update the course resource.
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 201
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_name:
                  type: string
                  example: Maths1
                course_code:
                  type: string
                  example: MA101
                course_description:
                  type: string
                  example: Course Description Example
      responses:
        '200':
          description: Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  course_id:
                    type: integer
                    example: 201
                  course_name:
                    type: string
                    example: Maths1
                  course_code:
                    type: string
                    example: MA101
                  course_description:
                    type: string
                    example: Course Description Example
        '404':
          description: Course not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: course_id
          required: true
          schema:
            type: integer
            example: 201
      responses:
        '200':
          description: Successfully Deleted
        '404':
          description: Course not found
        '500':
          description: Intenal Server Error

  /api/course:
    description: End point to create course resource
    post:
      description: Operation to create the course resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_name:
                  type: string
                  example: Maths1
                course_code:
                  type: string
                  example: MA101
                course_description:
                  type: string
                  example: Course Description Example
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  course_id:
                    type: integer
                    example: 201
                  course_name:
                    type: string
                    example: Maths1
                  course_code:
                    type: string
                    example: MA101
                  course_description:
                    type: string
                    example: Course Description Example
        '409':
          description: course_code already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
  /api/student/{student_id}:
    description: Url to read, update and delete the student resource.
    get:
      description: Operation to read student resource
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 201
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: student object
                type: object
                properties:
                  student_id:
                    type: integer
                    example: 101
                  first_name:
                    type: string
                    example: Narendra
                  last_name:
                    type: string
                    example: Mishra
                  roll_number:
                    type: string
                    example: MA19M010
        '500':
          description: Internal server error
        '404':
          description: Student not found


    put:
      description: Operation to update the student resource
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Narendra
                last_name:
                  type: string
                  example: Mishra
                roll_number:
                  type: string
                  example: MA19M010
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  student_id:
                    type: integer
                    example: 101
                  first_name:
                    type: string
                    example: Narendra
                  last_name:
                    type: string
                    example: Mishra
                  roll_number:
                    type: string
                    example: MA19M010
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      responses:
        '200':
          description: Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Student not found

  /api/student:
    description: Url to create student resource
    post:
      description: Operation to create the student resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Narendra
                last_name:
                  type: string
                  example: Mishra
                roll_number:
                  type: string
                  example: MA19M010
      responses:
        '201':
          description: Successfully Created
          content:
            application/json:
              schema:
                title: student object
                type: object
                properties:
                  student_id:
                    type: integer
                    example: 101
                  first_name:
                    type: string
                    example: Narendra
                  last_name:
                    type: string
                    example: Mishra
                  roll_number:
                    type: string
                    example: MA19M010
        '409':
          description: Student already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/student/{student_id}/enrollment:
    description: Url to enroll a student and get the list of enrollments for a student
    get:
      description: List of courses the student is enrolled in
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    enrollment_id:
                      type: integer
                      example: 10
                    student_id:
                      type: integer
                      example: 101
                    course_id:
                      type: integer
                      example: 201
        '404':
          description: Student is not enrolled in any course
        '500':
          description: Internal Server Error

    post:
      description: Add student enrollment aka enroll the student to a course
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  example: 12345
      responses:
        '201':
          description: Enrollment successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    enrollment_id:
                      type: integer
                      example: 10
                    student_id:
                      type: integer
                      example: 101
                    course_id:
                      type: integer
                      example: 201
        '404':
          description: Student not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/student/{student_id}/enrollment/{enrollment_id}:
    description: Url to delete enrollment of given enrollment_id
    delete:
      description: Delete student enrollment.
      parameters:
        - in: path
          name: student_id
          required: true
          schema:
            type: integer
            example: 101
        - in: path
          name: enrollment_id
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Successfully deleted
        '404':
          description: Enrollment for the student not found
        '500':
          description: Internal Server Error

